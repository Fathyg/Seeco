// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Seeco.Models;

namespace Seeco.Migrations
{
    [DbContext(typeof(ProjectsDbContext))]
    partial class ProjectsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Seeco.Models.AspNetRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Seeco.Models.AspNetRoles", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Seeco.Models.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Seeco.Models.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Seeco.Models.AspNetUserRoles", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Seeco.Models.AspNetUserTokens", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Seeco.Models.AspNetUsers", b =>
                {
                    b.Property<string>("Id");

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Seeco.Models.TblBoq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemId")
                        .IsRequired()
                        .HasColumnName("ItemID");

                    b.Property<string>("Notes")
                        .HasMaxLength(50);

                    b.Property<int?>("Qty");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<decimal?>("Uprice")
                        .HasColumnName("UPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("tblBoq");
                });

            modelBuilder.Entity("Seeco.Models.TblClients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50);

                    b.Property<string>("Ceo")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Faxes")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Notes");

                    b.Property<string>("Parent")
                        .HasMaxLength(50);

                    b.Property<string>("Phones")
                        .HasMaxLength(50);

                    b.Property<string>("WebSite")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("tblClients");
                });

            modelBuilder.Entity("Seeco.Models.TblClientsTeams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnName("ClientID");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("IdNo")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasMaxLength(50);

                    b.Property<string>("Notes");

                    b.Property<string>("Position")
                        .HasMaxLength(50);

                    b.Property<int?>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.Property<string>("ResponsibleName")
                        .HasMaxLength(50);

                    b.Property<string>("Sector")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProjectId");

                    b.ToTable("tblClientsTeams");
                });

            modelBuilder.Entity("Seeco.Models.TblConsultants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50);

                    b.Property<string>("Ceo")
                        .HasMaxLength(50);

                    b.Property<string>("Cofounder")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Faxes")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Notes");

                    b.Property<string>("Phones")
                        .HasMaxLength(50);

                    b.Property<string>("WebSite")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("tblConsultants");
                });

            modelBuilder.Entity("Seeco.Models.TblConsultantsTeams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsultantId")
                        .HasColumnName("ConsultantID");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("IdNo")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasMaxLength(50);

                    b.Property<string>("Notes");

                    b.Property<string>("Position")
                        .HasMaxLength(50);

                    b.Property<int?>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.Property<string>("ResponsibleName")
                        .HasMaxLength(50);

                    b.Property<string>("Sector")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ConsultantId");

                    b.HasIndex("ProjectId");

                    b.ToTable("tblConsultantsTeams");
                });

            modelBuilder.Entity("Seeco.Models.TblContractors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50);

                    b.Property<string>("Ceo")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Faxes")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Notes");

                    b.Property<string>("Parent")
                        .HasMaxLength(50);

                    b.Property<string>("Phones")
                        .HasMaxLength(50);

                    b.Property<string>("WebSite")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("tblContractors");
                });

            modelBuilder.Entity("Seeco.Models.TblContractorsTeams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContractorId")
                        .HasColumnName("ContractorID");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("IdNo")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasMaxLength(50);

                    b.Property<string>("Notes");

                    b.Property<string>("Position")
                        .HasMaxLength(50);

                    b.Property<int?>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.Property<string>("ResponsibleName")
                        .HasMaxLength(50);

                    b.Property<string>("Sector")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ContractorId");

                    b.HasIndex("ProjectId");

                    b.ToTable("tblContractorsTeams");
                });

            modelBuilder.Entity("Seeco.Models.TblContracts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BaseValue")
                        .HasColumnType("money");

                    b.Property<int?>("ClientId")
                        .HasColumnName("ClientID");

                    b.Property<int?>("ConsultantContractorId")
                        .HasColumnName("ConsultantContractorID");

                    b.Property<int?>("ConsultantDesignId")
                        .HasColumnName("ConsultantDesignID");

                    b.Property<int?>("ConsultantSupervisionId")
                        .HasColumnName("ConsultantSupervisionID");

                    b.Property<int?>("ContractorId")
                        .HasColumnName("ContractorID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Notes");

                    b.Property<int?>("Period");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ConsultantContractorId");

                    b.HasIndex("ConsultantDesignId");

                    b.HasIndex("ConsultantSupervisionId");

                    b.HasIndex("ContractorId");

                    b.ToTable("tblContracts");
                });

            modelBuilder.Entity("Seeco.Models.TblDrawingDet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DecisionMaker")
                        .HasMaxLength(50);

                    b.Property<string>("Decisions");

                    b.Property<int?>("DrawingId")
                        .HasColumnName("DrawingID");

                    b.HasKey("Id");

                    b.HasIndex("DrawingId");

                    b.ToTable("tblDrawingDet");
                });

            modelBuilder.Entity("Seeco.Models.TblDrawings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateIssued")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateReceived")
                        .HasColumnType("date");

                    b.Property<string>("DrawBy")
                        .HasMaxLength(50);

                    b.Property<string>("DrawingName")
                        .HasMaxLength(50);

                    b.Property<string>("DrawingType")
                        .HasMaxLength(50);

                    b.Property<string>("FilePath");

                    b.Property<int?>("ItemId")
                        .HasColumnName("ItemID");

                    b.Property<string>("Notes");

                    b.Property<string>("Receiver")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("tblDrawings");
                });

            modelBuilder.Entity("Seeco.Models.TblInvoicesContractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<decimal?>("DiscountContractor")
                        .HasColumnType("money");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(50);

                    b.Property<decimal?>("InvoiceValue")
                        .HasColumnType("money");

                    b.Property<decimal?>("Liability")
                        .HasColumnType("money");

                    b.Property<decimal?>("Net")
                        .HasColumnType("money");

                    b.Property<string>("Notes");

                    b.Property<decimal?>("PrePayed")
                        .HasColumnType("money");

                    b.Property<decimal?>("PreviousInvoices")
                        .HasColumnType("money");

                    b.Property<int?>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.Property<decimal?>("StoresValue")
                        .HasColumnType("money");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money");

                    b.Property<decimal?>("TotalAfterDiscountContractor")
                        .HasColumnType("money");

                    b.Property<decimal?>("WorksUpToDate")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("tblInvoicesContractor");
                });

            modelBuilder.Entity("Seeco.Models.TblItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ItemName")
                        .IsRequired();

                    b.Property<string>("ItemNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ItemType")
                        .HasMaxLength(50);

                    b.Property<int?>("ProjectId")
                        .IsRequired()
                        .HasColumnName("ProjectID");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("tblItems");
                });

            modelBuilder.Entity("Seeco.Models.TblLetters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateReceived")
                        .HasColumnType("date");

                    b.Property<string>("Descriptiopn");

                    b.Property<string>("DirectedTo")
                        .HasMaxLength(50);

                    b.Property<string>("FilePath");

                    b.Property<string>("IssuedBy")
                        .HasMaxLength(50);

                    b.Property<int?>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.Property<string>("Subject")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("tblLetters");
                });

            modelBuilder.Entity("Seeco.Models.TblProjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<int?>("ContractId")
                        .HasColumnName("ContractID");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Notes");

                    b.Property<int?>("Period");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("tblProjects");
                });

            modelBuilder.Entity("Seeco.Models.TblRequests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsultantTeamId")
                        .HasColumnName("ConsultantTeamID");

                    b.Property<int?>("ContractorTeamId")
                        .HasColumnName("ContractorTeamID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Decisions");

                    b.Property<string>("FilePath");

                    b.Property<int?>("SubItemId")
                        .HasColumnName("SubItemID");

                    b.Property<string>("Subject")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ConsultantTeamId");

                    b.HasIndex("ContractorTeamId");

                    b.HasIndex("SubItemId");

                    b.ToTable("tblRequests");
                });

            modelBuilder.Entity("Seeco.Models.TblRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("tblRoles");
                });

            modelBuilder.Entity("Seeco.Models.TblSchedules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Decision");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("date");

                    b.Property<string>("FilePath");

                    b.Property<int?>("Period");

                    b.Property<int?>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.Property<string>("Remarks");

                    b.Property<DateTime?>("SchEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("SchStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ScheduleNo")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("tblSchedules");
                });

            modelBuilder.Entity("Seeco.Models.TblSubItemsSpecifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemId")
                        .HasColumnName("ItemID");

                    b.Property<string>("Notes")
                        .HasMaxLength(50);

                    b.Property<string>("Spcifications");

                    b.Property<string>("SubItemName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("tblSubItemsSpecifications");
                });

            modelBuilder.Entity("Seeco.Models.TblTechProposals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsultantTeamId")
                        .HasColumnName("ConsultantTeamID");

                    b.Property<int?>("ContractorTeamId")
                        .HasColumnName("ContractorTeamID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Decesions");

                    b.Property<string>("FilePath")
                        .HasMaxLength(200);

                    b.Property<string>("Provider")
                        .HasMaxLength(200);

                    b.Property<int?>("SubItemId")
                        .HasColumnName("SubItemID");

                    b.HasKey("Id");

                    b.HasIndex("ConsultantTeamId");

                    b.HasIndex("ContractorTeamId");

                    b.HasIndex("SubItemId");

                    b.ToTable("tblTechProposals");
                });

            modelBuilder.Entity("Seeco.Models.TblUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RoleId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserRole");
                });

            modelBuilder.Entity("Seeco.Models.TblUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasMaxLength(50);

                    b.Property<int?>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("tblUsers");
                });

            modelBuilder.Entity("Seeco.Models.ViewModels.BoqViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int?>("ItemId");

                    b.Property<string>("ItemName");

                    b.Property<string>("ItemNo");

                    b.Property<string>("ItemType");

                    b.Property<string>("Notes");

                    b.Property<int>("ProjectId");

                    b.Property<int?>("Qty");

                    b.Property<string>("Unit");

                    b.Property<decimal?>("Uprice");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("BoqViewModel");
                });

            modelBuilder.Entity("Seeco.Models.ViewModels.ItemViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemsId");

                    b.Property<string>("ProjectName");

                    b.HasKey("Id");

                    b.HasIndex("ItemsId");

                    b.ToTable("ItemViewModel");
                });

            modelBuilder.Entity("Seeco.Models.AspNetRoleClaims", b =>
                {
                    b.HasOne("Seeco.Models.AspNetRoles", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.AspNetUserClaims", b =>
                {
                    b.HasOne("Seeco.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.AspNetUserLogins", b =>
                {
                    b.HasOne("Seeco.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.AspNetUserRoles", b =>
                {
                    b.HasOne("Seeco.Models.AspNetRoles", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Seeco.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.AspNetUserTokens", b =>
                {
                    b.HasOne("Seeco.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblBoq", b =>
                {
                    b.HasOne("Seeco.Models.TblItems", "Item")
                        .WithMany("TblBoq")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_tblBoq_tblItems")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblClientsTeams", b =>
                {
                    b.HasOne("Seeco.Models.TblClients", "Client")
                        .WithMany("TblClientsTeams")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_tblClientsTeams_tblClients")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Seeco.Models.TblProjects", "Project")
                        .WithMany("TblClientsTeams")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_tblClientsTeams_tblProjects");
                });

            modelBuilder.Entity("Seeco.Models.TblConsultantsTeams", b =>
                {
                    b.HasOne("Seeco.Models.TblConsultants", "Consultant")
                        .WithMany("TblConsultantsTeams")
                        .HasForeignKey("ConsultantId")
                        .HasConstraintName("FK_tblConsultantsTeams_tblConsultants")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Seeco.Models.TblProjects", "Project")
                        .WithMany("TblConsultantsTeams")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_tblConsultantsTeams_tblProjects");
                });

            modelBuilder.Entity("Seeco.Models.TblContractorsTeams", b =>
                {
                    b.HasOne("Seeco.Models.TblContractors", "Contractor")
                        .WithMany("TblContractorsTeams")
                        .HasForeignKey("ContractorId")
                        .HasConstraintName("FK_tblContractorsTeams_tblContractors")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Seeco.Models.TblProjects", "Project")
                        .WithMany("TblContractorsTeams")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_tblContractorsTeams_tblProjects");
                });

            modelBuilder.Entity("Seeco.Models.TblContracts", b =>
                {
                    b.HasOne("Seeco.Models.TblClients", "Client")
                        .WithMany("TblContracts")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_tblContracts_tblClients")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Seeco.Models.TblConsultants", "ConsultantContractor")
                        .WithMany("TblContractsConsultantContractor")
                        .HasForeignKey("ConsultantContractorId")
                        .HasConstraintName("FK_tblContracts_tblConsultantsContractor");

                    b.HasOne("Seeco.Models.TblConsultants", "ConsultantDesign")
                        .WithMany("TblContractsConsultantDesign")
                        .HasForeignKey("ConsultantDesignId")
                        .HasConstraintName("FK_tblContracts_tblConsultantsDesign")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Seeco.Models.TblConsultants", "ConsultantSupervision")
                        .WithMany("TblContractsConsultantSupervision")
                        .HasForeignKey("ConsultantSupervisionId")
                        .HasConstraintName("FK_tblContracts_tblConsultantsSupervision");

                    b.HasOne("Seeco.Models.TblContractors", "Contractor")
                        .WithMany("TblContracts")
                        .HasForeignKey("ContractorId")
                        .HasConstraintName("FK_tblContracts_tblContractors")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblDrawingDet", b =>
                {
                    b.HasOne("Seeco.Models.TblDrawings", "Drawing")
                        .WithMany("TblDrawingDet")
                        .HasForeignKey("DrawingId")
                        .HasConstraintName("FK_tblDrawingDet_tblDrawings")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblDrawings", b =>
                {
                    b.HasOne("Seeco.Models.TblItems", "Item")
                        .WithMany("TblDrawings")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_tblDrawings_tblItems")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblInvoicesContractor", b =>
                {
                    b.HasOne("Seeco.Models.TblProjects", "Project")
                        .WithMany("TblInvoicesContractor")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_tblInvoicesContractor_tblProjects")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblItems", b =>
                {
                    b.HasOne("Seeco.Models.TblProjects", "Project")
                        .WithMany("TblItems")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_tblItems_tblProjects")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblLetters", b =>
                {
                    b.HasOne("Seeco.Models.TblProjects", "Project")
                        .WithMany("TblLetters")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_tblLetters_tblProjects")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblProjects", b =>
                {
                    b.HasOne("Seeco.Models.TblContracts", "Contract")
                        .WithMany("TblProjects")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK_tblProjects_tblContracts")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblRequests", b =>
                {
                    b.HasOne("Seeco.Models.TblConsultantsTeams", "ConsultantTeam")
                        .WithMany("TblRequests")
                        .HasForeignKey("ConsultantTeamId")
                        .HasConstraintName("FK_tblRequests_tblConsultantsTeams");

                    b.HasOne("Seeco.Models.TblContractorsTeams", "ContractorTeam")
                        .WithMany("TblRequests")
                        .HasForeignKey("ContractorTeamId")
                        .HasConstraintName("FK_tblRequests_tblContractorsTeams");

                    b.HasOne("Seeco.Models.TblSubItemsSpecifications", "SubItem")
                        .WithMany("TblRequests")
                        .HasForeignKey("SubItemId")
                        .HasConstraintName("FK_tblRequests_tblSubItemsSpecifications")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblSchedules", b =>
                {
                    b.HasOne("Seeco.Models.TblProjects", "Project")
                        .WithMany("TblSchedules")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_tblSchedules_tblProjects")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblSubItemsSpecifications", b =>
                {
                    b.HasOne("Seeco.Models.TblItems", "Item")
                        .WithMany("TblSubItemsSpecifications")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_tblSubItemsSpecifications_tblItems")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblTechProposals", b =>
                {
                    b.HasOne("Seeco.Models.TblConsultantsTeams", "ConsultantTeam")
                        .WithMany("TblTechProposals")
                        .HasForeignKey("ConsultantTeamId")
                        .HasConstraintName("FK_tblTechProposals_tblConsultantsTeams");

                    b.HasOne("Seeco.Models.TblContractorsTeams", "ContractorTeam")
                        .WithMany("TblTechProposals")
                        .HasForeignKey("ContractorTeamId")
                        .HasConstraintName("FK_tblTechProposals_tblContractorsTeams");

                    b.HasOne("Seeco.Models.TblSubItemsSpecifications", "SubItem")
                        .WithMany("TblTechProposals")
                        .HasForeignKey("SubItemId")
                        .HasConstraintName("FK_tblTechProposals_tblSubItemsSpecifications");
                });

            modelBuilder.Entity("Seeco.Models.TblUserRole", b =>
                {
                    b.HasOne("Seeco.Models.TblRoles", "Role")
                        .WithMany("TblUserRole")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_tblUserRole_tblRoles")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Seeco.Models.TblUsers", "User")
                        .WithMany("TblUserRole")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_tblUserRole_tblUsers")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.TblUsers", b =>
                {
                    b.HasOne("Seeco.Models.TblProjects", "Project")
                        .WithMany("TblUsers")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_tblUsers_tblProjects")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seeco.Models.ViewModels.BoqViewModel", b =>
                {
                    b.HasOne("Seeco.Models.TblItems", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("Seeco.Models.ViewModels.ItemViewModel", b =>
                {
                    b.HasOne("Seeco.Models.TblItems", "Items")
                        .WithMany()
                        .HasForeignKey("ItemsId");
                });
#pragma warning restore 612, 618
        }
    }
}
